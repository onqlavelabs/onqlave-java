# Publishing Java packages with Maven
name: Publish Development
on:
  push:

permissions:
  contents: write

jobs:
  publish:
#    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && endsWith(github.event.base_ref, '/main')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "print debug"
        run: |
          echo ${{github.event.base_ref}}

      - name: "Release PR info"
        if: github.event_name != 'workflow_dispatch'
        run: echo "PR ${{ github.event.number }}"
      - uses: actions/checkout@v3

      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      # java publish
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Extract tag version
        id: extract_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed -e 's/^refs\/tags\/v//' -e 's/^refs\/heads\/v//')"

      - name: Update pom.xml version
        # sed only version of project
        run: |
          sed -i "s/<projectVersion>.*<\/projectVersion>/<projectVersion>0.0.4<\/projectVersion>/" pom.xml

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          # Install gpg secret key
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          # Verify gpg secret key
          gpg --list-secret-keys --keyid-format LONG

      - name: Publish package
        run: |
          mvn --batch-mode --no-transfer-progress -Dgpg.passphrase="${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}" clean deploy
        env:
          PROFILE: prod
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

  release:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: "Release PR info"
        if: github.event_name != 'workflow_dispatch'
        run: echo "PR ${{ github.event.number }}"
      - uses: actions/checkout@v3
      ############# GITHUB RELEASE ##############
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1

      - name: "Create a GitHub release v0.0.3"
        uses: ncipollo/release-action@v1
        with:
          tag: "v0.0.4"
          name: "Release v0.0.4"
          body: |
            ## Release notes:
            ${{ steps.extract-release-notes.outputs.release_notes }}